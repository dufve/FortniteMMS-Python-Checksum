import hashlib
import codecs

# The checksum is generated by hashing a UTF-16 Little Endian encoded string, formed by concatenating specific slices of the payload and signature with a token, using SHA1 and then converting a portion of the hash (bytes 2 to 10) to an uppercase hexadecimal string.

def generate_checksum(token, payload, signature):
    # Build plaintext
    plaintext = payload[10:20] + token + signature[2:10]

    # Convert to UTF-16 LE
    data = plaintext.encode('utf-16le')

    # Hash using SHA1
    hash = hashlib.sha1(data).digest()

    # Select 8 specific bytes and hex encode
    checksum = codecs.encode(hash[2:10], 'hex').upper()

    return checksum.decode()

# Variables
token = "Don'tMessWithMMS"
payload = ""   # base64 encoded payload
signature = "" # base64 encoded signature

# Generate and print checksum
print(generate_checksum(token, payload, signature))
